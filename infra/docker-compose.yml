version: "3"

networks:
  rentalService:
    driver: bridge


services:
  mongoDB:
    container_name: book-rental-service-mongodb
    #    image: mongodb/mongodb-community-server
    image: mongo
    networks:
      - rentalService
    hostname:
      mongoDB
    ports:
      - "27017:27017"
    volumes:
      - "./docker-file-system/mongo:/data/db"
    logging:
      options:
        max_file: "3"
        max_size: "10MB"
  zookeeper:
    image: confluentinc/cp-zookeeper
    container_name: MSA-zookeeper
    ports:
      - "32181:32181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 32181
      ZOOKEEPER_TICK_TIME: 2000
    logging:
      options:
        max_file: "3"
        max_size: "10MB"
  kafka:
    image: confluentinc/cp-kafka
    container_name: MSA-kafka
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:32181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:29092,EXTERNAL://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_NUM_PARTITIONS: 4

  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: MSA-kafka-ui
    ports:
      - "8989:8080"
    restart: always
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:29092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:32181